0: cld 
1: and rsp, 0xfffffffffffffff0
5: call 0xca
10: push r9
12: push r8
14: push rdx
15: push rcx
16: push rsi
17: xor rdx, rdx
20: mov rdx, qword ptr gs:[rdx + 0x60]
25: mov rdx, qword ptr [rdx + 0x18]
29: mov rdx, qword ptr [rdx + 0x20]
33: mov rsi, qword ptr [rdx + 0x50]
37: movzx rcx, word ptr [rdx + 0x4a]
42: xor r9, r9
45: xor rax, rax
48: lodsb al, byte ptr [rsi]
49: cmp al, 0x61
51: jl 0x37
53: sub al, 0x20
55: ror r9d, 0xd
59: add r9d, eax
62: loop 0x2d
64: push rdx
65: push r9
67: mov rdx, qword ptr [rdx + 0x20]
71: mov eax, dword ptr [rdx + 0x3c]
74: add rax, rdx
77: mov eax, dword ptr [rax + 0x88]
83: test rax, rax
86: je 0xbf
88: add rax, rdx
91: push rax
92: mov ecx, dword ptr [rax + 0x18]
95: mov r8d, dword ptr [rax + 0x20]
99: cli 
100: mov al, 0x17
102: mov ebp, 0xe3d00149
107: push rsi
108: dec rcx
111: scasd eax, dword ptr [rdi]
112: mov esi, dword ptr [r8 + rcx*4]
117: add rsi, rdx
120: xor r9, r9
123: xor rax, rax
126: lodsb al, byte ptr [rsi]
127: ror r9d, 0xd
131: add r9d, eax
134: cmp al, ah
136: jne 0x7b
138: add r9, qword ptr [rsp + 8]
143: cmp r9d, r10d
146: jne 0x6c
148: pop rax
149: mov r8d, dword ptr [rax + 0x24]
153: add r8, rdx
156: mov cx, word ptr [r8 + rcx*2]
161: mov r8d, dword ptr [rax + 0x1c]
165: add r8, rdx
168: mov eax, dword ptr [r8 + rcx*4]
172: add rax, rdx
175: pop r8
177: pop r8
179: pop rsi
180: pop rcx
181: pop rdx
182: pop r8
184: pop r9
186: pop r10
188: jg 0xc0
190: je 0xfc
192: cmp r15d, edx
