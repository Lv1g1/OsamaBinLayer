0: cld 
1: and rsp, 0xfffffffffffffff0
5: call 0xd6
10: push r9
12: push r8
14: push rdx
15: xor rdx, rdx
18: mov rdx, qword ptr gs:[rdx + 0x60]
23: push rcx
24: push rsi
25: mov rdx, qword ptr [rdx + 0x18]
29: mov rdx, qword ptr [rdx + 0x20]
33: mov rsi, qword ptr [rdx + 0x50]
37: movzx rcx, word ptr [rdx + 0x4a]
42: xor r9, r9
45: xor rax, rax
48: lodsb al, byte ptr [rsi]
49: cmp al, 0x61
51: jl 0x37
53: sub al, 0x20
55: ror r9d, 0xd
59: add r9d, eax
62: loop 0x2d
64: push rdx
65: push r9
67: mov rdx, qword ptr [rdx + 0x20]
71: mov eax, dword ptr [rdx + 0x3c]
74: add rax, rdx
77: cmp word ptr [rax + 0x18], 0x20b
83: jne 0xcb
89: mov eax, dword ptr [rax + 0x88]
