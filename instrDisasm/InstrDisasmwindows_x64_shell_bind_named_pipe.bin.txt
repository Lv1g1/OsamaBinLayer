0: cld 
1: and rsp, 0xfffffffffffffff0
5: call 0xd6
10: push r9
12: push r8
14: push rdx
15: push rcx
16: push rsi
17: xor rdx, rdx
20: mov rdx, qword ptr gs:[rdx + 0x60]
25: mov rdx, qword ptr [rdx + 0x18]
29: mov rdx, qword ptr [rdx + 0x20]
33: xor r9, r9
36: movzx rcx, word ptr [rdx + 0x4a]
41: mov rsi, qword ptr [rdx + 0x50]
45: xor rax, rax
48: lodsb al, byte ptr [rsi]
49: cmp al, 0x61
51: jl 0x37
53: sub al, 0x20
55: ror r9d, 0xd
59: add r9d, eax
62: loop 0x2d
64: push rdx
65: mov rdx, qword ptr [rdx + 0x20]
69: mov eax, dword ptr [rdx + 0x3c]
72: add rax, rdx
75: push r9
77: cmp word ptr [rax + 0x18], 0x20b
83: jne 0xcb
89: mov eax, dword ptr [rax + 0x88]
95: test rax, rax
98: je 0xcb
100: add rax, rdx
103: mov r8d, dword ptr [rax + 0x20]
107: push rax
108: mov ecx, dword ptr [rax + 0x18]
111: add r8, rdx
114: jrcxz 0xca
116: dec rcx
119: xor r9, r9
122: mov esi, dword ptr [r8 + rcx*4]
126: add rsi, rdx
129: xor rax, rax
132: lodsb al, byte ptr [rsi]
133: ror r9d, 0xd
137: add r9d, eax
140: cmp al, ah
142: jne 0x81
144: add r9, qword ptr [rsp + 8]
149: cmp r9d, r10d
152: jne 0x72
154: pop rax
155: mov r8d, dword ptr [rax + 0x24]
159: add r8, rdx
162: mov cx, word ptr [r8 + rcx*2]
167: mov r8d, dword ptr [rax + 0x1c]
171: add r8, rdx
174: mov eax, dword ptr [r8 + rcx*4]
178: add rax, rdx
181: pop r8
183: pop r8
185: pop rsi
186: pop rcx
187: pop rdx
188: pop r8
190: pop r9
192: pop r10
194: sub rsp, 0x20
198: push r10
200: jmp rax
202: pop rax
203: pop r9
205: pop rdx
206: mov rdx, qword ptr [rdx]
209: jmp 0x21
214: pop rbp
215: call 0xee
220: pop rsp
221: pop rsp
222: pop rsp
224: jo 0x14b
226: jo 0x149
228: pop rsp
229: insd dword ptr [rdi], dx
230: jae 0x14e
232: xor al, 0x88
